{
    "collab_server" : "",
    "contents" : "library(MASS)\n\n# read data into dataframe\ndata = read.csv(\"tecator.csv\", header = TRUE, sep = \",\", quote = \"\\\"\",\n                    dec = \".\", fill = TRUE, comment.char = \"\")\n\n# plot protein vs moisture fields\nplot(data$Protein, data$Moisture, xlab=\"Protein\", ylab=\"Moisture\", main=\"Protein vs Moisture\")\n\n# data seems to be correlated in a linear relationship, i.e. as values of one variable rises so does the other at a similar ratio\n# these data can therefore be described well by a linear model\n\n# a probabilistic model for predicting moisture (M-hat) would therefore be a polynomial function of protein as:\n# M-hat = w0 + w1x^1 + w2x^2 + ... + wix^i\n\n# TODO: Why MSE instead of SSE? \n# MSE = SSE/n-m where n=sample size, m=number of parameters (sum(w0..wi)).\n# and also:\n# MSE = 1/n * sum((Yi - Y-hat)^2)\n# MSE will be more dependent on the number of parameters used? \n\n# divide data into 50/50 training and validation sets\nset.seed(12345)\nn = nrow(data)\nid = sample(1:n, floor(n*0.5))\ntrain = data[id,]\nvalidation = data[-id,]\n\ntrain_mse = numeric(6)\nvalidation_mse = numeric(6)\n\n# fit a linear model using i = 0, 1, .. 6\nfor (i in 1:6)\n{\n  linear_model = lm(formula = Moisture ~ poly(Protein, i), data=train)\n  validation_predictions = predict(linear_model, validation)\n  train_predictions = predict(linear_model, train)\n  \n  validation_mse[i] = mean((validation$Moisture - validation_predictions)^2)\n  train_mse[i] = mean((train$Moisture - train_predictions)^2)\n}\n\n# plotting we see that i = 1 gives the lowest error in the validation data, while the error\n# goes down as i increases in the training data. since the model was fitted to the training data,\n# more parameters will lead to lower error in the training data but will create an overfitted model\n\ni_values = c(1:6)\ny_limits = c(min(train_mse, validation_mse), max(train_mse, validation_mse))\nplot(i_values, main=\"MSE\", ylim=y_limits, xlab=\"i\", ylab=\"MSE\")\nlines(validation_mse, col=\"green\")\nlines(train_mse, col=\"red\")\ntext(locator(), labels = c(\"Validation MSE\", \"Train MSE\"))\n\n# perform a variable selection from a linear model in which Fat is a response and \n# Channel1-Channel100 are predictors\n\n# useful: http://faculty.chicagobooth.edu/richard.hahn/teaching/formulanotation.pdf\n\nlinear_model = lm(Fat ~ . -Protein -Moisture, data=train)\nstep_aic = stepAIC(linear_model, direction=\"backward\")\nsummary(step_aic)\n\n\n",
    "created" : 1510593498668.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3830330794",
    "id" : "8AAFA95F",
    "lastKnownWriteTime" : 1510594443,
    "last_content_update" : 1510594443666,
    "path" : "~/TDDE01/lab1/lab1_assignment4/lab1_assignment4.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}