{
    "collab_server" : "",
    "contents" : "knearest=function(data,k,newdata) {\n  \n  n1=dim(data)[1]\n  n2=dim(newdata)[1]\n  p=dim(data)[2]\n  Prob=numeric(n2)\n  X=as.matrix(data[,-p])\n  print(dim(X))\n  Y=as.matrix(newdata[-p])\n  print(dim(Y))\n  \n  # X-hat and Y-hat\n  Xn=X/matrix(sqrt(rowSums(X^2)), nrow=n1, ncol=p-1)\n  Yn=Y/matrix(sqrt(rowSums(Y^2)), nrow=n1, ncol=p-1)\n  \n  # the cosine similarities of Yn with Xn\n  C = Xn %*% t(Yn)\n  \n  # the distances expressed as 1 - <the similarity>\n  D = 1 - C\n  \n  #print(data)\n  # \n  # for (i in 1:n2 ){\n  #   dist = sort(D[i,])[1:5]\n  #   \n  #   distindex = as.numeric(names(dist))\n  #   print(distindex)\n  #   classes = data[distindex,p]\n  #   print(classes)\n  \n  #MISSING: use the computed distance matrix to find \n  #which observations are the nearest neighbors to case #i\n  #MISSING: derive probability value 'Prob[i]' by using the\n  #target values of the nearest neighbors\n#}\n#  return(Prob)\n}\n\n\n\n# ROC=function(Y, Yfit, p){\n#   m=length(p)\n#   TPR=numeric(m)\n#   FPR=numeric(m)\n#   for(i in 1:m){\n#     t=table(Yfit>p[i], Y)\n#     TPR[i]=#insert formula for TPR\n#     FPR[i]=#insert formula for FPR\n#   }\n#   return (list(TPR=TPR,FPR=FPR))\n# }\n\ndata = spambase\n\nn=dim(data)[1]\nset.seed(12345)\nid=sample(1:n, floor(n*0.5))\ntrain=data[id,]\ntest=data[-id,]\n\nknearest(train,5,test)\n",
    "created" : 1509708659340.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1537612122",
    "id" : "3DFE9625",
    "lastKnownWriteTime" : 1509709772,
    "last_content_update" : 1509709772962,
    "path" : "~/TDDE01/lab1_assignment1/assignment1.R",
    "project_path" : "assignment1.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}